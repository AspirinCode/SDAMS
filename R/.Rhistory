seq_along(5)
seq_len(5)
seq_len(15)
aa = seq_len(6)
aa[1]
aa[2]
aa[5]
seq_along(c(11,2,3))
seq_along(c(11,2,13))
seq_len(6)
xx = function(x,y){
x+y
}
lapply(seq_len(3),xx,y=2)
lapply(seq_len(5),xx,y=2)
lapply(seq_len(5),function (i) i+1.4)
1:5
seq_len(1:5)
createMSsetFromCSV <- function(featurePath, groupPath, rownames1=1,rownames2=1,
header1=TRUE,header2=TRUE){
feature <- read.csv(featurePath, row.names = rownames1, header = header1,
check.names = FALSE)
group <- read.csv(groupPath, row.names = rownames2, header = header2,
check.names = FALSE)
subjectName = rownames(group)
if (is(group, "numeric")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData))[1] = "grouping"
}
if (is(group, "data.frame")) {
mgroup <- model.matrix(~group[,1])
group <- as.data.frame(mgroup[,2])
colData = DataFrame(grouping=group)
rownames(colData) = subjectName
colnames(colData))[1] = "grouping"
}
if (is(group, "matrix")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData))[1] = "grouping"
}
feature <- as.matrix(feature)
if (ncol(feature)!=nrow(group)) {
stop("Feature data and group data do not match!")
}
result <- SummarizedExperiment(assays=SimpleList(counts=feature),
colData=colData)
return(result)
}
createMSsetFromCSV <- function(featurePath, groupPath, rownames1=1,rownames2=1,
header1=TRUE,header2=TRUE){
feature <- read.csv(featurePath, row.names = rownames1, header = header1,
check.names = FALSE)
group <- read.csv(groupPath, row.names = rownames2, header = header2,
check.names = FALSE)
subjectName = rownames(group)
if (is(group, "numeric")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
if (is(group, "data.frame")) {
mgroup <- model.matrix(~group[,1])
group <- as.data.frame(mgroup[,2])
colData = DataFrame(grouping=group)
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
if (is(group, "matrix")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
feature <- as.matrix(feature)
if (ncol(feature)!=nrow(group)) {
stop("Feature data and group data do not match!")
}
result <- SummarizedExperiment(assays=SimpleList(counts=feature),
colData=colData)
return(result)
}
directory1 <- system.file("extdata", package="SDAMS", mustWork=TRUE)
path1<-paste(directory1,"ProstateFeature.csv",sep="/")
directory2 <- system.file("extdata", package="SDAMS", mustWork=TRUE)
path2<-paste(directory2,"ProstateGroup.csv",sep="/")
feature <- read.csv(path1, row.names = 1, header = 1, check.names = FALSE)
group <- read.csv(path2, row.names = 1, header = 1, check.names = FALSE)
aa=createMSsetFromCSV(path1,path2)
library(SummarizedExperiment)
aa=createMSsetFromCSV(path1,path2)
aa
bb=assay(aa)
class(bb)
dd=colData(aa)
dd
result <- SummarizedExperiment(assays=SimpleList(counts=feature),
colData=colData)
createMSsetFromEnvir <- function(feature, group) {
subjectName = rownames(group)
if (is(group, "numeric")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
if (is(group, "data.frame")) {
mgroup <- model.matrix(~group[,1])
group <- as.data.frame(mgroup[,2])
colData = DataFrame(grouping=group)
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
if (is(group, "matrix")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
feature <- as.matrix(feature)
if (ncol(feature)!=nrow(group)) {
stop("Feature data and group data do not match!")
}
result <- SummarizedExperiment(assays=SimpleList(counts=feature),
colData=colData)
return(result)
}
directory1 <- system.file("extdata", package="SDAMS", mustWork=TRUE)
path1<-paste(directory1,"ProstateFeature.csv",sep="/")
directory2 <- system.file("extdata", package="SDAMS", mustWork=TRUE)
path2<-paste(directory2,"ProstateGroup.csv",sep="/")
feature <- read.csv(path1, row.names = 1, header = 1, check.names = FALSE)
group <- read.csv(path2, row.names = 1, header = 1, check.names = FALSE)
createMSsetFromEnvir <- function(feature, group) {
subjectName = rownames(group)
if (is(group, "numeric")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
if (is(group, "data.frame")) {
mgroup <- model.matrix(~group[,1])
group <- as.data.frame(mgroup[,2])
colData = DataFrame(grouping=group)
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
if (is(group, "matrix")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
feature <- as.matrix(feature)
if (ncol(feature)!=nrow(group)) {
stop("Feature data and group data do not match!")
}
result <- SummarizedExperiment(assays=SimpleList(counts=feature),
colData=colData)
return(result)
}
createMSsetFromEnvir(feature,group)
head(feature); head(group)
aa
aa=createMSsetFromCSV(path1,path2)
createMSsetFromEnvir <- function(feature, group) {
subjectName = rownames(group)
if (is(group, "numeric")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
if (is(group, "data.frame")) {
mgroup <- model.matrix(~group[,1])
group <- as.data.frame(mgroup[,2])
colData = DataFrame(grouping=group)
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
if (is(group, "matrix")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
feature <- as.matrix(feature)
if (ncol(feature)!=nrow(group)) {
stop("Feature data and group data do not match!")
}
result <- SummarizedExperiment(assays=SimpleList(counts=feature),
colData=colData)
return(result)
}
# ------- import data from csv files ----------
createMSsetFromCSV <- function(featurePath, groupPath, rownames1=1,rownames2=1,
header1=TRUE,header2=TRUE){
feature <- read.csv(featurePath, row.names = rownames1, header = header1,
check.names = FALSE)
group <- read.csv(groupPath, row.names = rownames2, header = header2,
check.names = FALSE)
subjectName = rownames(group)
if (is(group, "numeric")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
if (is(group, "data.frame")) {
mgroup <- model.matrix(~group[,1])
group <- as.data.frame(mgroup[,2])
colData = DataFrame(grouping=group)
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
if (is(group, "matrix")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
feature <- as.matrix(feature)
if (ncol(feature)!=nrow(group)) {
stop("Feature data and group data do not match!")
}
result <- SummarizedExperiment(assays=SimpleList(counts=feature),
colData=colData)
return(result)
}
aa=createMSsetFromCSV(path1,path2)
class(aa)
dd=colData(aa)
dd
dd$grouping
aa
exampleSumExpset = createSEsetFromCSV(path1,path2)
exampleSumExpset = createSEsetFromEnvir(feature,group)
######## read data (two ways)   ########
#-------- get data from current environment ---------
createSEsetFromEnvir <- function(feature, group) {
subjectName = rownames(group)
if (is(group, "numeric")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
if (is(group, "data.frame")) {
mgroup <- model.matrix(~group[,1])
group <- as.data.frame(mgroup[,2])
colData = DataFrame(grouping=group)
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
if (is(group, "matrix")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
feature <- as.matrix(feature)
if (ncol(feature)!=nrow(group)) {
stop("Feature data and group data do not match!")
}
result <- SummarizedExperiment(assays=SimpleList(counts=feature),
colData=colData)
return(result)
}
# ------- import data from csv files ----------
createSEsetFromCSV <- function(featurePath, groupPath, rownames1=1,rownames2=1,
header1=TRUE,header2=TRUE){
feature <- read.csv(featurePath, row.names = rownames1, header = header1,
check.names = FALSE)
group <- read.csv(groupPath, row.names = rownames2, header = header2,
check.names = FALSE)
subjectName = rownames(group)
if (is(group, "numeric")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
if (is(group, "data.frame")) {
mgroup <- model.matrix(~group[,1])
group <- as.data.frame(mgroup[,2])
colData = DataFrame(grouping=group)
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
if (is(group, "matrix")) {
group <- as.data.frame(group)
colData = as(group,'DataFrame')
rownames(colData) = subjectName
colnames(colData)[1] = "grouping"
}
feature <- as.matrix(feature)
if (ncol(feature)!=nrow(group)) {
stop("Feature data and group data do not match!")
}
result <- SummarizedExperiment(assays=SimpleList(counts=feature),
colData=colData)
return(result)
}
exampleSumExpset = createSEsetFromEnvir(feature,group)
exampleSumExpset
save(exampleSumExpset,file = 'exampleSumExpset.rda')
